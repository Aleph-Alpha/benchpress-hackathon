{
    "problem_id": 4274,
    "question": "Your task is to write a function named `do_math` that receives a single argument. \nThis argument is a string that contains multiple whitespace delimited numbers. Each number has a single alphabet letter somewhere within it.\n```\nExample : \"24z6 1x23 y369 89a 900b\"\n```\nAs shown above, this alphabet letter can appear anywhere within the number. You have to extract the letters and sort the numbers according to their corresponding letters. \n```\nExample : \"24z6 1x23 y369 89a 900b\" will become 89 900 123 369 246 (ordered according to the alphabet letter)\n```\nHere comes the difficult part, now you have to do a series of computations on the numbers you have extracted.\n\n* The sequence of computations are `+ - * /`. Basic math rules do **NOT** apply, you have to do each computation in exactly this order.\n* This has to work for any size of numbers sent in (after division, go back to addition, etc).\n* In the case of duplicate alphabet letters, you have to arrange them according to the number that appeared first in the input string.\n* Remember to also round the final answer to the nearest integer.\n\n```\nExamples :\n\"24z6 1x23 y369 89a 900b\" = 89 + 900 - 123 * 369 / 246 = 1299\n\"24z6 1z23 y369 89z 900b\" = 900 + 369 - 246 * 123 / 89 = 1414\n\"10a 90x 14b 78u 45a 7b 34y\" = 10 + 45 - 14 * 7 / 78 + 90 - 34 = 60\n``` \nGood luck and may the CODE be with you!",
    "input_output": {
        "fn_name": "do_math",
        "inputs": [
            [
                "24z6 1z23 y369 89z 900b"
            ],
            [
                "24z6 1x23 y369 89a 900b"
            ],
            [
                "10a 90x 14b 78u 45a 7b 34y"
            ],
            [
                "111a 222c 444y 777u 999a 888p"
            ]
        ],
        "outputs": [
            [
                1414
            ],
            [
                1299
            ],
            [
                60
            ],
            [
                1459
            ]
        ]
    },
    "url": "https://www.codewars.com/kata/5782dd86202c0e43410001f6",
    "difficulty": "introductory",
    "starter_code": "def do_math(s) :\n\t",
    "test_cases": {
        "fn_name": "do_math",
        "inputs": [
            [
                "1z 2t 3q 5x 6u 8a 7b"
            ]
        ],
        "outputs": [
            [
                8
            ]
        ]
    }
}