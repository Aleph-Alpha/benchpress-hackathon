{
    "problem_id": 3414,
    "question": "# Introduction:\n\nReversi is a game usually played by 2 people on a 8x8 board.\nHere we're only going to consider a single 8x1 row.\n\nPlayers take turns placing pieces, which are black on one side and white on the\nother, onto the board with their colour facing up.  If one or more of the\nopponents pieces are sandwiched by the piece just played and another piece of\nthe current player's colour, the opponents pieces are flipped to the\ncurrent players colour.\n\nNote that the flipping stops when the first piece of the player's colour is reached.\n\n# Task:\n\nYour task is to take an array of moves and convert this into a string\nrepresenting the state of the board after all those moves have been played.\n\n# Input:\n\nThe input to your function will be an array of moves.\nMoves are represented by integers from 0 to 7 corresponding to the 8 squares on the board.\nBlack plays first, and black and white alternate turns.\nInput is guaranteed to be valid. (No duplicates, all moves in range, but array may be empty)\n\n# Output:\n\n8 character long string representing the final state of the board.\nUse '*' for black and 'O' for white and '.' for empty.\n\n# Examples:\n```python\n  reversi_row([])      # '........'\n  reversi_row([3])     # '...*....'\n  reversi_row([3,4])   # '...*O...'\n  reversi_row([3,4,5]) # '...***..'\n```",
    "input_output": {
        "fn_name": "reversi_row",
        "inputs": [
            [
                []
            ],
            [
                [
                    0
                ]
            ],
            [
                [
                    0,
                    1
                ]
            ],
            [
                [
                    0,
                    7,
                    4
                ]
            ],
            [
                [
                    3
                ]
            ],
            [
                [
                    3,
                    4
                ]
            ],
            [
                [
                    3,
                    4,
                    5
                ]
            ],
            [
                [
                    2,
                    1,
                    0
                ]
            ],
            [
                [
                    0,
                    1,
                    4,
                    3,
                    2
                ]
            ],
            [
                [
                    0,
                    1,
                    7,
                    2,
                    3
                ]
            ],
            [
                [
                    3,
                    2,
                    7,
                    1,
                    0
                ]
            ],
            [
                [
                    3,
                    4,
                    5,
                    6,
                    0,
                    2
                ]
            ],
            [
                [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ]
            ],
            [
                [
                    7,
                    0,
                    1
                ]
            ],
            [
                [
                    0,
                    7,
                    6
                ]
            ],
            [
                [
                    1,
                    0,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ]
            ],
            [
                [
                    5,
                    1,
                    3,
                    4,
                    6
                ]
            ],
            [
                [
                    1,
                    7,
                    0,
                    5,
                    6,
                    4
                ]
            ]
        ],
        "outputs": [
            [
                "........"
            ],
            [
                "*......."
            ],
            [
                "*O......"
            ],
            [
                "*...*..O"
            ],
            [
                "...*...."
            ],
            [
                "...*O..."
            ],
            [
                "...***.."
            ],
            [
                "***....."
            ],
            [
                "*****..."
            ],
            [
                "****...*"
            ],
            [
                "****...*"
            ],
            [
                "*.OOOOO."
            ],
            [
                "*******O"
            ],
            [
                "O*.....*"
            ],
            [
                "*.....*O"
            ],
            [
                "OOOOOOOO"
            ],
            [
                ".O.*O**."
            ],
            [
                "**..OO*O"
            ]
        ]
    },
    "url": "https://www.codewars.com/kata/55aa92a66f9adfb2da00009a",
    "difficulty": "introductory",
    "starter_code": "def reversi_row(moves):\n\t"
}