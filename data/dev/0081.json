{
    "problem_id": 2748,
    "question": "Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent.\n\nA mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.\n\n\n\nExample:\n\n\nInput: \"23\"\nOutput: [\"ad\", \"ae\", \"af\", \"bd\", \"be\", \"bf\", \"cd\", \"ce\", \"cf\"].\n\n\nNote:\n\nAlthough the above answer is in lexicographical order, your answer could be in any order you want.",
    "input_output": {
        "fn_name": "letterCombinations",
        "inputs": [
            [
                "\"23\""
            ],
            [
                "\"\""
            ],
            [
                "\"2\""
            ]
        ],
        "outputs": [
            [
                [
                    "\"ad\"",
                    "\"ae\"",
                    "\"af\"",
                    "\"bd\"",
                    "\"be\"",
                    "\"bf\"",
                    "\"cd\"",
                    "\"ce\"",
                    "\"cf\""
                ]
            ],
            [
                []
            ],
            [
                [
                    "\"a\"",
                    "\"b\"",
                    "\"c\""
                ]
            ]
        ]
    },
    "url": "https://leetcode.com/problems/letter-combinations-of-a-phone-number/",
    "difficulty": "interview",
    "starter_code": "class Solution:\n    def letterCombinations(self, digits: str) -> List[str]:\n        "
}