{
    "problem_id": 4521,
    "question": "Vasya wants to climb up a stair of certain amount of steps (Input parameter 1). There are 2 simple rules that he has to stick to.\n\n1. Vasya can climb 1 or 2 steps at each move.\n2. Vasya wants the number of moves to be a multiple of a certain integer. (Input parameter 2).\n\n### Task:\nWhat is the `MINIMAL` number of moves making him climb to the top of the stairs that satisfies his conditions?\n\n### Input\n\n1. Number of stairs:    `0 <  N  \u2264 10000` ;\n2. Integer to be multiplied : `1 < M \u2264 10 `;\n\n### Output\n\n1. Return a single integer - the minimal number of moves being a multiple of M;\n2. If there is no way he can climb satisfying condition return\u2009-\u20091 instead. (`Nothing` in Haskell)\n\n### Examples\n\n```python\nnumberOfSteps(10, 2) => 6  # Sequence of steps : {2, 2, 2, 2, 1, 1}\n\nnumberOfSteps(3, 5) => -1 # !Possible sequences of steps : {2, 1}, {1, 2}, {1, 1, 1}\n```\n``` haskell\nnumberOfSteps 10 2 == Just 6  -- Sequence of steps : {2, 2, 2, 2, 1, 1}\nnumberOfSteps  3 5 == Nothing -- Not possible, since the sequences of steps would be {2, 1}, {1, 2} or {1, 1, 1}\n```",
    "input_output": {
        "fn_name": "numberOfSteps",
        "inputs": [
            [
                10,
                2
            ],
            [
                3,
                5
            ],
            [
                29,
                7
            ],
            [
                2,
                2
            ],
            [
                1,
                2
            ],
            [
                10000,
                2
            ],
            [
                10000,
                3
            ],
            [
                10000,
                10
            ],
            [
                9999,
                3
            ],
            [
                9999,
                2
            ],
            [
                9999,
                10
            ],
            [
                9999,
                9
            ],
            [
                18,
                10
            ],
            [
                19,
                10
            ],
            [
                20,
                10
            ],
            [
                7688,
                5
            ],
            [
                4608,
                5
            ],
            [
                3979,
                2
            ],
            [
                5,
                2
            ]
        ],
        "outputs": [
            [
                6
            ],
            [
                -1
            ],
            [
                21
            ],
            [
                2
            ],
            [
                -1
            ],
            [
                5000
            ],
            [
                5001
            ],
            [
                5000
            ],
            [
                5001
            ],
            [
                5000
            ],
            [
                5000
            ],
            [
                5004
            ],
            [
                10
            ],
            [
                10
            ],
            [
                10
            ],
            [
                3845
            ],
            [
                2305
            ],
            [
                1990
            ],
            [
                4
            ]
        ]
    },
    "url": "https://www.codewars.com/kata/55251c0d2142d7b4ab000aef",
    "difficulty": "introductory",
    "starter_code": "def numberOfSteps(steps, m):\n\t"
}