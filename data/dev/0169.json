{
    "problem_id": 4692,
    "question": "You're a buyer/seller and your buisness is at stake... You ___need___ to make profit... Or at least, you need to lose the least amount of money!  \nKnowing a list of prices for buy/sell operations, you need to pick two of them. Buy/sell market is evolving across time and the list represent this evolution. First, you need to buy one item, then sell it later. Find the best profit you can do.\n\n### Example:\n\nGiven an array of prices `[3, 10, 8, 4]`, the best profit you could make would be `7` because you buy at `3` first, then sell at `10`.\n\n# Input:\n\nA list of prices (integers), of length 2 or more.\n\n# Output:\n\nThe result of the best buy/sell operation, as an integer.\n\n\n\n### Note:\nBe aware you'll face lists with several thousands of elements, so think about performance.",
    "input_output": {
        "fn_name": "max_profit",
        "inputs": [
            [
                [
                    10,
                    7,
                    5,
                    8,
                    11,
                    9
                ]
            ],
            [
                [
                    3,
                    4
                ]
            ],
            [
                [
                    9,
                    9
                ]
            ],
            [
                [
                    10,
                    7,
                    5,
                    4,
                    1
                ]
            ]
        ],
        "outputs": [
            [
                6
            ],
            [
                1
            ],
            [
                0
            ],
            [
                -1
            ]
        ]
    },
    "url": "https://www.codewars.com/kata/58f174ed7e9b1f32b40000ec",
    "difficulty": "introductory",
    "starter_code": "def max_profit(prices):\n\t"
}