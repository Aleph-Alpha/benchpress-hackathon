{
    "problem_id": 3967,
    "question": "An eviternity number is a number which:\n* contains only digits 8, 5 and 3, and \n* the count of the digit `8` >= count of digit `5` >= count of digit `3`. \n\nThe first few eviternity numbers are as follows. \n```Haskell\n[8, 58, 85, 88, 358, 385, 538, 583, 588, 835, 853, 858, 885, 888]\n```\nYou will be given two integers, `a` and `b`, and your task is to return the number of eviternity numbers in the range `>= a and < b`.\n```Haskell\nFor example:\nsolve(0,1000) = 14, because they are [8, 58, 85, 88, 358, 385, 538, 583, 588, 835, 853, 858, 885, 888]\n```\n\nThe upper bound will not exceed `500,000`.\n\nMore examples in test cases. Good luck!",
    "input_output": {
        "fn_name": "solve",
        "inputs": [
            [
                0,
                100
            ],
            [
                0,
                1000
            ],
            [
                0,
                10000
            ],
            [
                0,
                100000
            ],
            [
                0,
                500000
            ],
            [
                90,
                139701
            ],
            [
                61,
                56976
            ]
        ],
        "outputs": [
            [
                4
            ],
            [
                14
            ],
            [
                37
            ],
            [
                103
            ],
            [
                148
            ],
            [
                99
            ],
            [
                53
            ]
        ]
    },
    "url": "https://www.codewars.com/kata/5b93f268563417c7ed0001bd",
    "difficulty": "introductory",
    "starter_code": "def solve(a, b):\n\t"
}