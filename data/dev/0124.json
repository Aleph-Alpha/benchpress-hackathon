{
    "problem_id": 3873,
    "question": "Related to MrZizoScream's Product Array kata. You might want to solve that one first :)\n\n```if:javascript\n**Note:** Node 10 has now been enabled, and you can now use its BigInt capabilities if you wish, though your resulting array must still contain strings (e.g. \"99999999999\", not 9999999999n)\n\nPre-node 10: You will need to use the BigNumber.js library! Please use `.toFixed(0)` or `.toPrecision()` to round instead of `.toString(10)`, as the latter is _very_ slow\n```\n\nThis is an adaptation of a problem I came across on LeetCode. \n\nGiven an array of numbers, your task is to return a new array where each index (`new_array[i]`) is equal to the product of the original array, except for the number at that index (`array[i]`).\n\n**Two things to keep in mind:**\n\n* Zeroes will be making their way into some of the arrays you are given\n* O(n^2) solutions will not pass.\n\nExamples:\n\n**Note**: All inputs will be valid arrays of nonzero length.\n\nHave fun! Please upvote if you enjoyed :)",
    "input_output": {
        "fn_name": "product_sans_n",
        "inputs": [
            [
                [
                    1,
                    1,
                    1
                ]
            ],
            [
                [
                    0,
                    -99,
                    0
                ]
            ],
            [
                [
                    9,
                    0,
                    -2
                ]
            ],
            [
                [
                    1,
                    2,
                    3,
                    4
                ]
            ],
            [
                [
                    2,
                    3,
                    4,
                    5
                ]
            ],
            [
                [
                    -8,
                    1,
                    5,
                    13,
                    -1
                ]
            ],
            [
                [
                    3,
                    14,
                    9,
                    11,
                    11
                ]
            ],
            [
                [
                    4,
                    7,
                    3,
                    6,
                    2,
                    11,
                    14,
                    4,
                    7,
                    5
                ]
            ]
        ],
        "outputs": [
            [
                [
                    1,
                    1,
                    1
                ]
            ],
            [
                [
                    0,
                    0,
                    0
                ]
            ],
            [
                [
                    0,
                    -18,
                    0
                ]
            ],
            [
                [
                    24,
                    12,
                    8,
                    6
                ]
            ],
            [
                [
                    60,
                    40,
                    30,
                    24
                ]
            ],
            [
                [
                    -65,
                    520,
                    104,
                    40,
                    -520
                ]
            ],
            [
                [
                    15246,
                    3267,
                    5082,
                    4158,
                    4158
                ]
            ],
            [
                [
                    5433120,
                    3104640,
                    7244160,
                    3622080,
                    10866240,
                    1975680,
                    1552320,
                    5433120,
                    3104640,
                    4346496
                ]
            ]
        ]
    },
    "url": "https://www.codewars.com/kata/5b3e609cd58499284100007a",
    "difficulty": "introductory",
    "starter_code": "def product_sans_n(nums):\n\t"
}