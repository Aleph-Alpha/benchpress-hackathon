{
    "problem_id": 2303,
    "question": "Given an input string s, reverse the order of the words.\n\nA word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.\n\nReturn a string of the words in reverse order concatenated by a single space.\n\nNote that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.\n\n\nExample 1:\n\nInput: s = \"the sky is blue\"\nOutput: \"blue is sky the\"\nExample 2:\n\nInput: s = \"  hello world  \"\nOutput: \"world hello\"\nExplanation: Your reversed string should not contain leading or trailing spaces.\nExample 3:\n\nInput: s = \"a good   example\"\nOutput: \"example good a\"\nExplanation: You need to reduce multiple spaces between two words to a single space in the reversed string.\nExample 4:\n\nInput: s = \"  Bob    Loves  Alice   \"\nOutput: \"Alice Loves Bob\"\nExample 5:\n\nInput: s = \"Alice does not even like bob\"\nOutput: \"bob like even not does Alice\"\n \n\nConstraints:\n\n1 <= s.length <= 104\ns contains English letters (upper-case and lower-case), digits, and spaces ' '.\nThere is at least one word in s.",
    "input_output": {
        "fn_name": "reverseWords",
        "inputs": [
            [
                "the sky is blue"
            ],
            [
                "  hello world  "
            ],
            [
                "a good   example"
            ],
            [
                "  Bob    Loves  Alice   "
            ],
            [
                "Alice does not even like bob"
            ]
        ],
        "outputs": [
            "blue is sky the",
            "world hello",
            "example good a",
            "Alice Loves Bob",
            "bob like even not does Alice"
        ]
    },
    "url": "https://leetcode.com/problems/reverse-words-in-a-string/",
    "difficulty": "interview",
    "starter_code": "class Solution:\n    def reverseWords(self, s: str) -> str:\n        "
}