{
    "problem_id": 3220,
    "question": "The sum of divisors of `6` is `12` and the sum of divisors of `28` is `56`. You will notice that `12/6 = 2` and `56/28 = 2`. We shall say that `(6,28)` is a pair with a ratio of `2`.  Similarly, `(30,140)` is also a pair but with a ratio of `2.4`. These ratios are simply decimal representations of fractions.\n\n`(6,28)` and `(30,140)` are the only pairs in which `every member of a pair is 0 <= n < 200`. The sum of the lowest members of each pair is `6 + 30 = 36`. \n\nYou will be given a `range(a,b)`, and your task is to group the numbers into pairs with the same ratios. You will return the sum of the lowest member of each pair in the range. If there are no pairs. return `nil` in Ruby, `0` in python. Upper limit is `2000`.\n\n```Haskell\nsolve(0,200) = 36\n```\n\nGood luck!\n\nif you like this Kata, please try:\n\n[Simple division](https://www.codewars.com/kata/59ec2d112332430ce9000005)\n\n[Sub-array division](https://www.codewars.com/kata/59eb64cba954273cd4000099)",
    "input_output": {
        "fn_name": "solve",
        "inputs": [
            [
                1,
                100
            ],
            [
                1,
                200
            ],
            [
                1,
                300
            ],
            [
                200,
                1000
            ],
            [
                1,
                1000
            ],
            [
                100,
                1000
            ],
            [
                800,
                2000
            ]
        ],
        "outputs": [
            [
                6
            ],
            [
                36
            ],
            [
                252
            ],
            [
                1104
            ],
            [
                2619
            ],
            [
                2223
            ],
            [
                2352
            ]
        ]
    },
    "url": "https://www.codewars.com/kata/59bf97cd4f98a8b1cd00007e",
    "difficulty": "introductory",
    "starter_code": "def solve(a,b):\n\t"
}