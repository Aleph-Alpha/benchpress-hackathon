{
    "problem_id": 2759,
    "question": "```if-not:ruby\nCreate a function, that accepts an arbitrary number of arrays and returns a single array generated by alternately appending elements from the passed in arguments. If one of them is shorter than the others, the result should be padded with empty elements.\n```\n```if:ruby\nCreate a function, that accepts an arbitrary number of arrays and returns a single array generated by alternately appending elements from the passed in arguments. If one of them is shorter than the others, the result should be padded with `nil`s.\n```\n\nExamples:\n\n```python\ninterleave([1, 2, 3], [\"c\", \"d\", \"e\"]) == [1, \"c\", 2, \"d\", 3, \"e\"]\ninterleave([1, 2, 3], [4, 5]) == [1, 4, 2, 5, 3, None]\ninterleave([1, 2, 3], [4, 5, 6], [7, 8, 9]) == [1, 4, 7, 2, 5, 8, 3, 6, 9]\ninterleave([]) == []\n```",
    "input_output": {
        "fn_name": "interleave",
        "inputs": [
            [
                [
                    1,
                    2,
                    3
                ],
                [
                    "c",
                    "d",
                    "e"
                ]
            ],
            [
                [
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5
                ]
            ],
            [
                [
                    1,
                    2
                ],
                [
                    3,
                    4,
                    5
                ]
            ],
            [
                [
                    null
                ],
                [
                    null,
                    null
                ],
                [
                    null,
                    null,
                    null
                ]
            ],
            [
                [
                    1,
                    2,
                    3
                ],
                [
                    4,
                    5,
                    6
                ],
                [
                    7,
                    8,
                    9
                ]
            ],
            [
                []
            ]
        ],
        "outputs": [
            [
                [
                    1,
                    "c",
                    2,
                    "d",
                    3,
                    "e"
                ]
            ],
            [
                [
                    1,
                    4,
                    2,
                    5,
                    3,
                    null
                ]
            ],
            [
                [
                    1,
                    3,
                    2,
                    4,
                    null,
                    5
                ]
            ],
            [
                [
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                ]
            ],
            [
                [
                    1,
                    4,
                    7,
                    2,
                    5,
                    8,
                    3,
                    6,
                    9
                ]
            ],
            [
                []
            ]
        ]
    },
    "url": "https://www.codewars.com/kata/523d2e964680d1f749000135",
    "difficulty": "introductory",
    "starter_code": "def interleave(*args):\n\t"
}