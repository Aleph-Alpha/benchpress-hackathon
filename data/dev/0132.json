{
    "problem_id": 2982,
    "question": "Here you will create the classic [Pascal's triangle](https://en.wikipedia.org/wiki/Pascal%27s_triangle).\nYour function will be passed the depth of the triangle and you code has to return the corresponding pascal triangle up to that depth.\n\nThe triangle should be returned as a nested array.\n\nfor example:\n```python\npascal(5) # should return [[1], [1,1], [1,2,1], [1,3,3,1], [1,4,6,4,1]]\n```\n\nTo build the triangle, start with a single 1 at the top, for each number in the next row you just take the two numbers above it and add them together (except for the edges, which are all `1`), e.g.:\n```\n              [1]\n            [1   1]\n          [1   2   1]\n        [1   3   3   1]\n```",
    "input_output": {
        "fn_name": "pascal",
        "inputs": [
            [
                1
            ],
            [
                5
            ],
            [
                10
            ]
        ],
        "outputs": [
            [
                [
                    [
                        1
                    ]
                ]
            ],
            [
                [
                    [
                        1
                    ],
                    [
                        1,
                        1
                    ],
                    [
                        1,
                        2,
                        1
                    ],
                    [
                        1,
                        3,
                        3,
                        1
                    ],
                    [
                        1,
                        4,
                        6,
                        4,
                        1
                    ]
                ]
            ],
            [
                [
                    [
                        1
                    ],
                    [
                        1,
                        1
                    ],
                    [
                        1,
                        2,
                        1
                    ],
                    [
                        1,
                        3,
                        3,
                        1
                    ],
                    [
                        1,
                        4,
                        6,
                        4,
                        1
                    ],
                    [
                        1,
                        5,
                        10,
                        10,
                        5,
                        1
                    ],
                    [
                        1,
                        6,
                        15,
                        20,
                        15,
                        6,
                        1
                    ],
                    [
                        1,
                        7,
                        21,
                        35,
                        35,
                        21,
                        7,
                        1
                    ],
                    [
                        1,
                        8,
                        28,
                        56,
                        70,
                        56,
                        28,
                        8,
                        1
                    ],
                    [
                        1,
                        9,
                        36,
                        84,
                        126,
                        126,
                        84,
                        36,
                        9,
                        1
                    ]
                ]
            ]
        ]
    },
    "url": "https://www.codewars.com/kata/52945ce49bb38560fe0001d9",
    "difficulty": "introductory",
    "starter_code": "def pascal(p):\n\t"
}