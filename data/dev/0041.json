{
    "problem_id": 4422,
    "question": "Welcome\n\nThis kata is inspired by This Kata\n\n\nWe have a string s\n\nWe have a number n\n\nHere is a function that takes your string, concatenates the even-indexed chars to the front, odd-indexed chars to the back.\n\nExamples\n\n    s = \"Wow Example!\"\n    result = \"WwEapeo xml!\"\n    s = \"I'm JomoPipi\"\n    result = \"ImJm ii' ooPp\"\n    \nThe Task:\n\nreturn the result of the string after applying the function to it n times.\n\nexample where s = \"qwertyuio\" and n = 2:\n\n    after 1 iteration  s = \"qetuowryi\"\n    after 2 iterations s = \"qtorieuwy\"\n    return \"qtorieuwy\"\n\n Note \n\nthere's a lot of tests, big strings,\nand n is greater than a billion\n\nso be ready to optimize.\n\nafter doing this: do it's best friend!\n\n# Check out my other kata!\n\n        \nMatrix Diagonal Sort OMG\nString -> N iterations -> String\nString -> X iterations -> String\nANTISTRING\nArray - squareUp b!\nMatrix - squareUp b!\nInfinitely Nested Radical Expressions\npipi Numbers!",
    "input_output": {
        "fn_name": "jumbled_string",
        "inputs": [
            [
                "Such Wow!",
                1
            ],
            [
                "better example",
                2
            ],
            [
                "qwertyuio",
                2
            ],
            [
                "Greetings",
                8
            ],
            [
                "I like it!",
                1234
            ],
            [
                "codingisfornerdsyounerd",
                10101010
            ],
            [
                "this_test_will_hurt_you",
                12345678987654321
            ]
        ],
        "outputs": [
            [
                "Sc o!uhWw"
            ],
            [
                "bexltept merae"
            ],
            [
                "qtorieuwy"
            ],
            [
                "Gtsegenri"
            ],
            [
                "Iiei t kl!"
            ],
            [
                "criyinodedsgufrnodnoser"
            ],
            [
                "ti_etwl_utyuhsts_ilhr_o"
            ]
        ]
    },
    "url": "https://www.codewars.com/kata/5ae43ed6252e666a6b0000a4",
    "difficulty": "introductory",
    "starter_code": "def jumbled_string(s, n):\n\t"
}