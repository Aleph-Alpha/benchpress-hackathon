{
    "problem_id": 4191,
    "question": "Write a function, `persistence`, that takes in a positive parameter `num` and returns its multiplicative persistence, which is the number of times you must multiply the digits in `num` until you reach a single digit.\n\nFor example:\n\n```python\n persistence(39) => 3  # Because 3*9 = 27, 2*7 = 14, 1*4=4\n                       # and 4 has only one digit.\n                 \n persistence(999) => 4 # Because 9*9*9 = 729, 7*2*9 = 126,\n                       # 1*2*6 = 12, and finally 1*2 = 2.\n                  \n persistence(4) => 0   # Because 4 is already a one-digit number.\n```\n```python\n persistence(39) # returns 3, because 3*9=27, 2*7=14, 1*4=4\n                 # and 4 has only one digit\n                  \n persistence(999) # returns 4, because 9*9*9=729, 7*2*9=126,\n                  # 1*2*6=12, and finally 1*2=2\n\n persistence(4) # returns 0, because 4 is already a one-digit number\n```",
    "input_output": {
        "fn_name": "persistence",
        "inputs": [
            [
                39
            ],
            [
                4
            ],
            [
                25
            ],
            [
                999
            ],
            [
                444
            ]
        ],
        "outputs": [
            [
                3
            ],
            [
                0
            ],
            [
                2
            ],
            [
                4
            ],
            [
                3
            ]
        ]
    },
    "url": "https://www.codewars.com/kata/55bf01e5a717a0d57e0000ec",
    "difficulty": "introductory",
    "starter_code": "def persistence(n):\n\t"
}